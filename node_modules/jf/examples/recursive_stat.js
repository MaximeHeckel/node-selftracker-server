var start = require('../lib/jf').start,
	util = require("util"),
	FS = require('fs'),
	P = require('path');

var rstat = function (path, cb) {
	var table = {};

	start(function(task) {
		FS.lstat( path, task.cb() );
	})
	.then(function(task, err, stat) {
		if(err) { 
			throw err; 
		}
		if( stat.isSymbolicLink() ) { return; }
		table[path] = stat;

		if( stat.isDirectory() ) {
			FS.readdir( path, task.cb() );
		}
		else {
			task.push([]);
		}
	})
	.then(function(task, err, files) {
		if(err) { 
			throw err; 
		}
		var i, subpath;

		for(i = 0; i < files.length; i++) {
			subpath = P.join(path, files[i]);
			rstat( subpath, task.cb() );
		}
	})
	.each(function(task, err, result) {
		if(err) { 
			throw err;
		}

		for(var subpath in result) {
			table[subpath] = result[subpath];
		}
	})
	.end(function(err) {
		cb(err, table)
	})
};

rstat( P.join(__dirname, "..") , function(err, results) {
	if(err) {
		console.log(err);
	}
	else {
		console.log(results);
	}
});